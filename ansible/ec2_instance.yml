---
- name: "Run the playbook for AWS resources provisioning."
  hosts: localhost
  vars:
    ansible_connection: local
    #ansible_python_interpreter: /usr/bin/python3
    aws_region: us-east-1
    validate_certs: false 
  tasks:
    - name: "Create VPC with cidr block"
      ec2_vpc_net:
        validate_certs: False
        name: "awx_vpc"
        cidr_block: 10.10.0.0/16
        region: "{{ aws_region }}"
        tags:
          module: ec2_vpc_net
          this: works
        tenancy: default
      register: awx_vpc
    
    - name: "Create Internet Gateway and Associate it with above VPC"
      ec2_vpc_igw:
        vpc_id: "{{ awx_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        state: present
        validate_certs: false
      register: awx_igw


    - name: "Create a subnet in the above VPC"
      ec2_vpc_subnet:
        validate_certs: false 
        state: present
        vpc_id: "{{ awx_vpc.vpc.id }}"
        cidr: 10.10.0.0/20
        region: "{{ aws_region }}"
        tags:
          Name: "EC2 Instance Subnet"
      register: awx_subnet


    - name: "Create Route Table for the public Subnet"
      ec2_vpc_route_table:
        validate_certs: false 
        vpc_id: "{{ awx_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        tags:
          Name: Public
        subnets:
          - "{{ awx_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ awx_igw.gateway_id }}"
      register: awx_public_route_table


    - name: "Create Security Group rules for EC2 Instance"
      ec2_group:
        validate_certs: false 
        name: awx_sg
        description: "sg for allowing ssh connections"
        vpc_id: "{{ awx_vpc.vpc.id }}"
        region: "{{ aws_region }}"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all connections on port 22

    - name: create key pair using provided
      ec2_key:
        validate_certs: false 
        region: 'us-east-1'
        name: aws-key-us-east-1
        key_material: "{{ lookup('file','id_rsa.pub') }}"


    - name: "Provisioning of a RHEL8 EC2 Instance"
      ec2:
        count_tag:
          - controller
          - node01
          - node02
        validate_certs: false 
        region: "{{ aws_region }}"
        key_name: aws-key-us-east-1
        instance_type: t2.micro
        image: ami-098f16afa9edf40be
        wait: yes
        group: awx_sg
        count: 3
        vpc_subnet_id: "{{ awx_subnet.subnet.id }}"
        assign_public_ip: yes
      register: awx_instance

    - name: Create ec2-hosts file for next playbook 
      template: 
         src: templates/ec2_hosts.j2
         dest: ec2_hosts

    - name: "Debug task to show the public IP of RHEL8 EC2 Instance"
      debug:
        msg: "Public IP of the RHEL8 Instance is {{ awx_instance.instances[0].public_ip }}"